<?xml version="1.0" encoding="UTF-8"?>
<!--
此文件为说明文件，可以执行测试类进行测试
数据库表结构及数据内容说明

表：ZZStudent  学生基础信息表
Sno Sname Sex Sage Sdept
***************************
1   张三  男    18 北京大学
2   李四  女    18 清华大学

表：ZZCourse  学生课程分数表
Cno Cname Credit Semester
***************************
1   语文     100        1
2   数学     100        1
3   语文      90        2
4   数学      88        2

每一个属性在此类中均可以找到说明，请确保此文件保持最新，任何变更需确保此文件可以正常测试通过
v1.0  -createData 2020-05-26


变更日志：
v1.0
-->
<excelConfig>
	<parameters>

        <!--template_FilePath:模板文件的路径，如果使用模板，则View中配置的TOP LEFT 不起作用，排版的方式完全依赖模板中的内容-->
        <parameter name="template_FilePath" value=""/>
        <!-- outputFilePath：文件输出的路径，不允许为空-->
		<parameter name="outputFilePath" value=""/>
        <!--
        parameter中的属性具体含义
        htmlType[input/select]//类型选择项:下拉框/文本输入框/单选框/日期选择
        isRequired;//是否是必填项
        desc //描述
        modelId//对应数据源的id: 从xml中的model中获取对应id的数据源当htmlType为Select下拉框时候提供数据支持
        -->
        <parameter name="StudentID" value="1" isRequired="1" desc="请选择您要查询的学生姓名" modelId="" />

	</parameters>
        <!--
         models 块
         cls属性值为一个Java类，需要实现com.thinkgem.jeesite.common.excelConfig.exector.ModelsInterFace 接口的getDataSource 方法
         一旦实现后，实现类将接管models处理方法
        -->
	<models cls="">

         <!--
          model 块
          id属性：必填，且属性必须对应view中的modelid
         -->
		<model  id="ZZStudent_Query">
			<parameters>
                <!--
                 parameter块
                 name
                 class
                 value:@@开头的变量代表系统变量，在运行时，会自动替换为实际的内容，例如@@Userid在系统运行期，会自动替换为当前运行的用户的ID
                       $F!开头的变量代表运行期的变量，其中{}中包裹的变量为View中的属性的feild名称，在系统运行期，会被property中实际的字段值替换
                       例如 $F!{AAA} ，代表当前model一定对于了一个view，其中view中一定有一个property属性，其中的filed值一定为AAA


                 -->
				<parameter name="userid" class="java.lang.String" value="@@Userid"/>
			</parameters>
			<SQLStrs>
               <!--
               sqlStr块
               此内容块中，可以配置一条或者多条SQL语句，如果需要使用参数，必须使用$P!前缀且必须用{}进行包裹model块中的 parameter中的name引用
               例如，此句中，因为使用参数用户ID，则使用'$P!{userid}'进行引用， userid在parameter块中进行了配置
               -->
				<sqlStr>
					<![CDATA[
						SELECT Sno, Sname, Sex, Sage, Sdept
						FROM dbo.ZZStudent
						WHERE Sno ='$P!{userid}';
					]]>
				</sqlStr>
			</SQLStrs>
		</model>

	</models>

       <!--
        views块
        action属性[query,save]
        query:代表从model中获取数据集，然后根据view中配置的 sheet名称，从CELL[Top,left]坐标开始，将数据输出到Excel文件中
        save：代表从Excel原始文件中获取数据，根据view中配置的 sheet名称，从CELL[Top,left]坐标开始获取数据，
             将数据按照VIEW中的配置的字段类型，存储到property对象中，然后传递到model中。
        -->
 		<views   action="query">

            <!--
                   view块
                   view块可以有主子关系，或者不同的view块可以毫无联系都是允许的
                   modelid：所有的view中的modelid值不允许重复，必须保持唯一
                   sheetName:输出到Excel中的sheetName名称，可以不配置，如果不配置，默认为Excel文件中的第一个sheet
                   top:指定从第上面数第几行开始
                   left:指定从左边数第几列开始
                   ref:指定父级view，参数为父级view的modelid 。默认可以为空或者不设置ref元素。
                   /**
                   view可以指定主-子报表的形式，例如：学生和分数的关系就是一个典型的主-子结构
                   每一个学生都对应若干学科的分数

                   **/
            -->
				<view modelid="ZZStudent_Query" sheetName="sheet1"   top="1" left="1">
					<propertys>
                       <!--
                       property块
                       cellIndex：相对位置坐标，相对于其所在view块中配置的top和left的对应坐标的偏移
                                  例如：配置0,1代表是其依赖单元格偏移0行1列
                                       配置1,1代表其依赖单元格偏移1行1列
                                  后面的property依赖前面的property配置，第一行的property配置依赖其父节点view中的top和left的配置
                       feild：和model中的数据集的映射关系
                       type：数据的类型
                       getValueFunction： 如果有特殊要求，则需要实现一个接口
                                          com.thinkgem.jeesite.common.excelConfig.exector.GetValueFunctionInterFace
                                          应用场景：如果某个值需要特殊处理，有特殊逻辑时候，可以通过此类进行处理，例如：如果某个值需要特殊格式化
                                          例如：1234格式化为一千二百三十四 或者判断某个值在其他模块中是否有对应数据，如果有才允许插入等等
                        required [0,1,-1]
                                  0代表为必须为空，1代表必须不能为空，-1代表不检查 此属性非常重要，通常用作读取Excel时候的退出或者终止的条件


                       -->

						<property 	cellIndex="0,1" feild="Sno" 	type="java.lang.Integer"  />
						<property 	cellIndex="0,1" feild="Sname"   type="java.lang.String" />
						<property 	cellIndex="0,1"	feild="Sex" 	type="java.lang.String" />
						<property 	cellIndex="0,1"	feild="Sage" 	type="java.lang.String" />
						<property 	cellIndex="0,1"	feild="Sdept" 	type="java.lang.String" />
						<property 	cellIndex="0,1"	feild="Sdept" 	type="java.lang.String"
									getValueFunction="com.thinkgem.jeesite.common.excelConfig.impl.GenID"
						/>
					</propertys>
				</view>


		</views>

</excelConfig>